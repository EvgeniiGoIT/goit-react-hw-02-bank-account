{"version":3,"sources":["Components/TransactionHistory/TransactionHistory.module.css","Components/Dashboard/Dashboard.module.css","Components/Controls/Controls.module.css","Components/Controls/Controls.jsx","Components/Balance/Balance.jsx","Components/TransactionHistory/TransactionHistory.jsx","Components/Dashboard/Dashboard.jsx","index.js","Components/Balance/Balance.module.css"],"names":["module","exports","Controls","state","value","saveInputValue","e","setState","currentTarget","sendTransaction","transaction","this","props","onDeposit","onWithdraw","className","styles","controls","input","type","name","onChange","button","onClick","Component","Balance","balance","income","expenses","role","aria-label","balance__text","TransactionHistory","items","history","tableHeading","map","item","id","amount","date","tableRow","key","TYPE","deposit","withdraw","MESSAGE","zero","noEnough","Dashboard","transactions","handleDeposit","checkTransaction","handleWithdraw","toast","saveTransaction","newTransaction","setTransaction","prevState","uuidv1","Date","toLocaleString","incomeExpenses","process","length","filter","reduce","acc","dashboard","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea4753f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__2gmIE\",\"tableRow\":\"TransactionHistory_tableRow__1uyGF\",\"tableHeading\":\"TransactionHistory_tableHeading__vFe9M TransactionHistory_tableRow__1uyGF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__1106X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__FhJGu\",\"input\":\"Controls_input__3xLga\",\"button\":\"Controls_button__2kth6\"};","import React, { Component } from \"react\";\r\nimport T from \"prop-types\";\r\nimport styles from \"./Controls.module.css\";\r\n\r\nclass Controls extends Component {\r\n  static propTypes = {\r\n    onDeposit: T.func.isRequired,\r\n    onWithdraw: T.func.isRequired\r\n  };\r\n  state = {\r\n    value: \"\"\r\n  };\r\n  saveInputValue = e => {\r\n    this.setState({ value: e.currentTarget.value });\r\n  };\r\n  sendTransaction = transaction => {\r\n    const { value } = this.state;\r\n    if (value > 0) {\r\n      this.setState({ value: \"\" });\r\n    }\r\n    transaction(value);\r\n  };\r\n  render() {\r\n    const { onDeposit, onWithdraw } = this.props;\r\n    const {value} = this.state\r\n    return (\r\n      <section className={styles.controls}>\r\n        <input className={styles.input} type=\"number\" name=\"amount\" value={value}  onChange={this.saveInputValue} />\r\n        <button className={styles.button} type=\"button\" onClick={() => this.sendTransaction(onDeposit)}>\r\n          Deposit\r\n        </button>\r\n        <button className={styles.button} type=\"button\" onClick={() => this.sendTransaction(onWithdraw)}>\r\n          Withdraw\r\n        </button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\nimport styles from \"./Balance.module.css\";\r\n\r\nconst Balance = ({ balance, income, expenses }) => (\r\n  <section className={styles.balance}>\r\n    <span className={styles.income}>\r\n      <span role=\"img\" aria-label=\"jsx-a11y/accessible-emoji\">\r\n        ⬆️\r\n      </span>\r\n      {income}$\r\n    </span>\r\n    <span className={styles.expenses}>\r\n      <span role=\"img\" aria-label=\"jsx-a11y/accessible-emoji\">\r\n        ⬇️\r\n      </span>\r\n      {expenses}$\r\n    </span>\r\n    <span className={styles.balance__text}>Balance: {balance}$</span>\r\n  </section>\r\n);\r\n\r\nBalance.propTypes = {\r\n  balance: T.number.isRequired,\r\n  income: T.number.isRequired,\r\n  expenses: T.number.isRequired\r\n};\r\nexport default Balance;\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.history}>\r\n    <thead>\r\n      <tr className={styles.tableHeading}>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(item => {\r\n        const { id, type, amount, date } = item;\r\n        return (\r\n          <tr className={styles.tableRow} key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{date}</td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: T.arrayOf(\r\n    T.shape({\r\n      id: T.string.isRequired,\r\n      type: T.string.isRequired,\r\n      amount: T.number.isRequired,\r\n      date: T.string.isRequired\r\n    }).isRequired\r\n  ).isRequired\r\n};\r\nexport default TransactionHistory;\r\n","import React, { Component } from \"react\";\r\nimport uuidv1 from \"uuid/v1\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport styles from \"./Dashboard.module.css\";\r\nimport Controls from \"./../Controls/Controls\";\r\nimport Balance from \"./../Balance/Balance\";\r\nimport TransactionHistory from \"./../TransactionHistory/TransactionHistory\";\r\n\r\nconst TYPE = {\r\n  deposit: \"deposit\",\r\n  withdraw: \"withdraw\"\r\n};\r\nconst MESSAGE = {\r\n  zero: \"Введите сумму для проведения операции!\",\r\n  noEnough: \"На счету недостаточно средств для проведения операции!\"\r\n};\r\nclass Dashboard extends Component {\r\n  state = {\r\n    transactions: [],\r\n    balance: 0\r\n  };\r\n\r\n  handleDeposit = value => {\r\n    this.checkTransaction(+value, TYPE.deposit);\r\n  };\r\n  handleWithdraw = value => {\r\n    this.checkTransaction(+value, TYPE.withdraw);\r\n  };\r\n  checkTransaction = (value, type) => {\r\n    const { balance } = this.state;\r\n    if (!value) {\r\n      toast(MESSAGE.zero);\r\n      return;\r\n    } else if (type === TYPE.withdraw && value > balance) {\r\n      toast(MESSAGE.noEnough);\r\n      return;\r\n    } else {\r\n      this.saveTransaction(value, type);\r\n    }\r\n  };\r\n  saveTransaction = (value, type) => {\r\n    const newTransaction = this.setTransaction(value, type);\r\n    this.setState(prevState => ({\r\n      transactions: [...prevState.transactions, newTransaction],\r\n      balance:\r\n        type === TYPE.deposit\r\n          ? prevState.balance + value\r\n          : prevState.balance - value\r\n    }));\r\n  };\r\n  setTransaction = (amount, type) => ({\r\n    id: uuidv1(),\r\n    type,\r\n    amount,\r\n    date: new Date().toLocaleString()\r\n  });\r\n  incomeExpenses = (transactions, process) => {\r\n    let value = 0;\r\n    if (transactions.length) {\r\n      value = transactions\r\n        .filter(transaction => transaction.type === TYPE[process])\r\n        .reduce((acc, transaction) => acc + transaction.amount, 0);\r\n    }\r\n    return value;\r\n  };\r\n  render() {\r\n    const { transactions, balance } = this.state;\r\n    const income = this.incomeExpenses(transactions, TYPE.deposit);\r\n    const expenses = this.incomeExpenses(transactions, TYPE.withdraw);\r\n    return (\r\n      <>\r\n        <div className={styles.dashboard}>\r\n          <Controls\r\n            onDeposit={this.handleDeposit}\r\n            onWithdraw={this.handleWithdraw}\r\n          />\r\n          <Balance balance={balance} income={income} expenses={expenses} />\r\n          {transactions.length > 0 && (\r\n            <TransactionHistory items={transactions} />\r\n          )}\r\n          <ToastContainer />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\r\n\r\nReactDOM.render(<Dashboard />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__1A8tG\",\"balance__text\":\"Balance_balance__text__OY4Dp\",\"income\":\"Balance_income__2-061 Balance_balance__text__OY4Dp\",\"expenses\":\"Balance_expenses__3PQXj Balance_balance__text__OY4Dp\"};"],"sourceRoot":""}