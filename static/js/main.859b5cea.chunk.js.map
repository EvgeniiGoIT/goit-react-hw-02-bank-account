{"version":3,"sources":["Components/TransactionHistory/TransactionHistory.module.css","Components/Dashboard/Dashboard.module.css","Components/Controls/Controls.module.css","Components/Controls/Controls.jsx","Components/Balance/Balance.jsx","Components/TransactionHistory/TransactionHistory.jsx","Components/Dashboard/Dashboard.jsx","index.js","Components/Balance/Balance.module.css"],"names":["module","exports","Controls","state","value","saveInputValue","e","setState","currentTarget","sendTransaction","transaction","this","props","onDeposit","onWithdraw","className","styles","controls","input","type","name","onChange","button","onClick","Component","Balance","income","expenses","balance","fixedNumber","number","toFixed","role","aria-label","balance__text","TransactionHistory","items","history","tableHeading","map","item","id","amount","date","tableRow","key","TYPE","deposit","withdraw","MESSAGE","zero","noEnough","Dashboard","transactions","handleDeposit","checkTransaction","handleWithdraw","toast","saveTransaction","newTransaction","setTransaction","prevState","uuidv1","Date","toLocaleString","incomeExpenses","process","length","filter","reduce","acc","dashboard","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.859b5cea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__2gmIE\",\"tableRow\":\"TransactionHistory_tableRow__1uyGF\",\"tableHeading\":\"TransactionHistory_tableHeading__vFe9M TransactionHistory_tableRow__1uyGF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__1106X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__FhJGu\",\"input\":\"Controls_input__3xLga\",\"button\":\"Controls_button__2kth6\"};","import React, { Component } from \"react\";\r\nimport T from \"prop-types\";\r\nimport styles from \"./Controls.module.css\";\r\n\r\nclass Controls extends Component {\r\n  static propTypes = {\r\n    onDeposit: T.func.isRequired,\r\n    onWithdraw: T.func.isRequired\r\n  };\r\n  state = {\r\n    value: \"\"\r\n  };\r\n  saveInputValue = e => {\r\n    this.setState({ value: e.currentTarget.value });\r\n  };\r\n  sendTransaction = transaction => {\r\n    const { value } = this.state;\r\n    transaction(+value);\r\n    this.setState({ value: \"\" });\r\n  };\r\n  render() {\r\n    const { onDeposit, onWithdraw } = this.props;\r\n    const { value } = this.state;\r\n    return (\r\n      <section className={styles.controls}>\r\n        <input\r\n          className={styles.input}\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={value}\r\n          onChange={this.saveInputValue}\r\n        />\r\n        <button\r\n          className={styles.button}\r\n          type=\"button\"\r\n          onClick={() => this.sendTransaction(onDeposit)}\r\n        >\r\n          Deposit\r\n        </button>\r\n        <button\r\n          className={styles.button}\r\n          type=\"button\"\r\n          onClick={() => this.sendTransaction(onWithdraw)}\r\n        >\r\n          Withdraw\r\n        </button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\nimport styles from \"./Balance.module.css\";\r\n\r\nconst Balance = ({income, expenses, balance}) => {\r\n  const fixedNumber = number => number.toFixed(2);\r\n    return (\r\n    <section className={styles.balance}>\r\n      <span className={styles.income}>\r\n        <span role=\"img\" aria-label=\"jsx-a11y/accessible-emoji\">\r\n          ⬆️\r\n        </span>\r\n        {fixedNumber(income)} $\r\n      </span>\r\n      <span className={styles.expenses}>\r\n        <span role=\"img\" aria-label=\"jsx-a11y/accessible-emoji\">\r\n          ⬇️\r\n        </span>\r\n        {fixedNumber(expenses)} $\r\n      </span>\r\n      <span className={styles.balance__text}>Balance: {fixedNumber(balance)} $</span>\r\n    </section>\r\n  );\r\n};\r\n\r\nBalance.propTypes = {\r\n  balance: T.number.isRequired,\r\n  income: T.number.isRequired,\r\n  expenses: T.number.isRequired\r\n};\r\nexport default Balance;\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.history}>\r\n    <thead>\r\n      <tr className={styles.tableHeading}>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(item => {\r\n        const { id, type, amount, date } = item;\r\n        return (\r\n          <tr className={styles.tableRow} key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount.toFixed(2)} $</td>\r\n            <td>{date}</td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: T.arrayOf(\r\n    T.shape({\r\n      id: T.string.isRequired,\r\n      type: T.string.isRequired,\r\n      amount: T.number.isRequired,\r\n      date: T.string.isRequired\r\n    }).isRequired\r\n  ).isRequired\r\n};\r\nexport default TransactionHistory;\r\n","import React, { Component } from \"react\";\r\nimport uuidv1 from \"uuid/v1\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport styles from \"./Dashboard.module.css\";\r\nimport Controls from \"./../Controls/Controls\";\r\nimport Balance from \"./../Balance/Balance\";\r\nimport TransactionHistory from \"./../TransactionHistory/TransactionHistory\";\r\n\r\nconst TYPE = {\r\n  deposit: \"deposit\",\r\n  withdraw: \"withdraw\"\r\n};\r\nconst MESSAGE = {\r\n  zero: \"Введите сумму для проведения операции!\",\r\n  noEnough: \"На счету недостаточно средств для проведения операции!\"\r\n};\r\nclass Dashboard extends Component {\r\n  state = {\r\n    transactions: [],\r\n    balance: 0\r\n  };\r\n\r\n  handleDeposit = value => {\r\n    this.checkTransaction(value, TYPE.deposit);\r\n  };\r\n  handleWithdraw = value => {\r\n    this.checkTransaction(value, TYPE.withdraw);\r\n  };\r\n  checkTransaction = (value, type) => {\r\n    const { balance } = this.state;\r\n    if (!value || value < 0) {\r\n      toast(MESSAGE.zero);\r\n      return;\r\n    } else if (type === TYPE.withdraw && value > balance) {\r\n      toast(MESSAGE.noEnough);\r\n      return;\r\n    } else {\r\n      this.saveTransaction(value, type);\r\n    }\r\n  };\r\n  saveTransaction = (value, type) => {\r\n    const newTransaction = this.setTransaction(value, type);\r\n    this.setState(prevState => ({\r\n      transactions: [...prevState.transactions, newTransaction],\r\n      balance:\r\n        type === TYPE.deposit\r\n          ? prevState.balance + value\r\n          : prevState.balance - value\r\n    }));\r\n  };\r\n  setTransaction = (amount, type) => ({\r\n    id: uuidv1(),\r\n    type,\r\n    amount,\r\n    date: new Date().toLocaleString()\r\n  });\r\n  incomeExpenses = (transactions, process) => {\r\n    let value = 0;\r\n    if (transactions.length) {\r\n      value = transactions\r\n        .filter(transaction => transaction.type === TYPE[process])\r\n        .reduce((acc, transaction) => acc + transaction.amount, 0);\r\n    }\r\n    return value;\r\n  };\r\n  render() {\r\n    const { transactions, balance } = this.state;\r\n    const income = this.incomeExpenses(transactions, TYPE.deposit);\r\n    const expenses = this.incomeExpenses(transactions, TYPE.withdraw);\r\n    return (\r\n      <>\r\n        <div className={styles.dashboard}>\r\n          <Controls\r\n            onDeposit={this.handleDeposit}\r\n            onWithdraw={this.handleWithdraw}\r\n          />\r\n          <Balance balance={balance} income={income} expenses={expenses} />\r\n          {transactions.length > 0 && (\r\n            <TransactionHistory items={transactions} />\r\n          )}\r\n          <ToastContainer />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\r\n\r\nReactDOM.render(<Dashboard />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__1A8tG\",\"balance__text\":\"Balance_balance__text__OY4Dp\",\"income\":\"Balance_income__2-061 Balance_balance__text__OY4Dp\",\"expenses\":\"Balance_expenses__3PQXj Balance_balance__text__OY4Dp\"};"],"sourceRoot":""}